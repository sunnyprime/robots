{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NAceA,EAZH,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,MACrB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACE,6BAAKC,IACL,4BAAIC,WCMII,EAXE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACXC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACrC,OAAO,cAAC,EAAD,CAAcX,GAAIO,EAAOI,GAAGX,GAAIC,KAAMM,EAAOI,GAAGV,KAAMC,MAAOK,EAAOI,GAAGT,OAA5DS,MAEpB,OACE,8BACGH,KCMQI,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC9B,OACE,qBAAKX,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCDI,G,MARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,SAAtC,SACGH,EAAMI,aCiDEC,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAiBFC,eAAe,SAACC,GAEd,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAlBxC,EAAKC,MAAQ,CACXvB,OAAQ,GACRM,YAAY,IAJF,E,gEAQO,IAAD,OAClBkB,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKR,SAAS,CAACpB,OAAO4B,S,+BAWhB,IAAD,EACsBC,KAAKN,MAA3BvB,EADA,EACAA,OAAOM,EADP,EACOA,YACRwB,EAAiBD,KAAKN,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC9C,OAAOA,EAAON,KAAKsC,cAAcC,SAAS3B,EAAY0B,kBAExD,OAAsB,IAAlBhC,EAAOkC,OACF,4CAIT,sBAAKtC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ8B,a,GAxCRK,aCKHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCAdO,IAASC,OACT,cAAC,EAAD,IAGEC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.ea14cc6e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card =({id,name,email}) =>{\r\n return(\r\n   <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n     <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n     <div>\r\n       <h2>{name}</h2>\r\n       <p>{email}</p>\r\n     </div>\r\n   </div>\r\n ) \r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n  const cardComponent = robots.map((user,i) => {\r\n    return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n  })\r\n  return (\r\n    <div>\r\n      {cardComponent}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n      className='pa3 ba b--green bg-lightest=blue'\r\n      type='search'\r\n      placeholder='search robots'\r\n      onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflow:'scroll',height:'500px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll\r\n","import React,{Component} from 'react'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport {robots} from  '../robots'\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield:''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response =>{\r\n      return response.json()\r\n    })\r\n    .then(users => {\r\n      this.setState({robots:users})\r\n    })\r\n  }\r\n\r\n  onSearchChange=(event)=>{\r\n    // console.log(event.target.value);\r\n    this.setState({searchfield:event.target.value})\r\n    // console.log(this.state);\r\n    \r\n  }\r\n\r\n  render() {\r\n    const {robots,searchfield} = this.state\r\n    const filteredRobots = this.state.robots.filter(robots =>{\r\n      return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    if (robots.length === 0){\r\n      return <h1>Loading...</h1>\r\n    }\r\n    else {\r\n  return (\r\n    <div className=\"tc\">\r\n      <h1 className='f1'>RoboFriends</h1>\r\n      <SearchBox searchChange={this.onSearchChange} />\r\n      <Scroll>\r\n        <CardList robots={filteredRobots} />\r\n      </Scroll>\r\n    </div>\r\n  )\r\n}}\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App'\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n<App />\n,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}